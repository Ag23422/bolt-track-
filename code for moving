code for moving without collision
#include "Components/PrimitiveComponent.h"
#include "GameFramework/Actor.h"
#include "Components/SphereComponent.h"
#include "UnrealMathUtility.h"

void MoveActorWithoutCollision(AActor* Actor, const FVector& Destination, float Speed)
{
    UPrimitiveComponent* CollisionComponent = Actor->FindComponentByClass<UPrimitiveComponent>();
    if (!CollisionComponent)
    {
        return;
    }
    FVector Direction = Destination - Actor->GetActorLocation();
    float Distance = Direction.Size();

 
    while (Distance > 0)
    {
       
        float FrameDistance = Speed * GetWorld()->GetDeltaSeconds();
        if (FrameDistance > Distance)
        {
            FrameDistance = Distance;
        }

       
        FVector Start = Actor->GetActorLocation();
        FVector End = Start + Direction.GetSafeNormal() * FrameDistance;

   
        FHitResult Hit;
        if (CollisionComponent->SweepSingleByChannel(Hit, Start, End, FQuat::Identity, ECC_Visibility, FCollisionShape::MakeSphere(CollisionComponent->GetScaledSphereRadius())))
        {
            FVector CollisionOffset = Hit.ImpactPoint - Start;
            Actor->SetActorLocation(Actor->GetActorLocation() + CollisionOffset);
            Distance -= CollisionOffset.Size();
        }
        else
        {
          
            Actor->SetActorLocation(Actor->GetActorLocation() + Direction.GetSafeNormal() * FrameDistance);
            Distance -= FrameDistance;
        }
    }
}

